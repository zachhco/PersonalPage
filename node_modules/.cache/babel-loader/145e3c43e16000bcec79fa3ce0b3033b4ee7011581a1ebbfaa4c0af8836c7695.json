{"ast":null,"code":"var _jsxFileName = \"/Users/zachcohen/Desktop/web_design/PersonalPage/src/pages/Projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport styled from '@emotion/styled';\nimport { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport { ProjectsContext } from '../../context/ProjectsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 1.5rem;\n`;\n_c = ProjectGrid;\nconst ProjectCard = styled(motion.div)`\n  background: white;\n  border-radius: 10px;\n  padding: 1rem;\n  box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n_c2 = ProjectCard;\nconst ProjectLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n_c3 = ProjectLink;\nconst ProjectImage = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 10px;\n  margin-bottom: 1rem;\n`;\n_c4 = ProjectImage;\nconst Projects = () => {\n  _s();\n  const {\n    projects\n  } = useContext(ProjectsContext);\n  const getProjectPath = id => {\n    switch (id) {\n      case 1:\n        return '/projects/seatbelt';\n      case 2:\n        return '/projects/ngo';\n      default:\n        return '#';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectGrid, {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: /*#__PURE__*/_jsxDEV(ProjectLink, {\n          to: getProjectPath(project.id),\n          children: [/*#__PURE__*/_jsxDEV(ProjectImage, {\n            src: `/images/${project.image}`,\n            alt: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"gtkLeBUo84KzdO8zvnBPfbsgY4A=\");\n_c5 = Projects;\nexport default Projects;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ProjectGrid\");\n$RefreshReg$(_c2, \"ProjectCard\");\n$RefreshReg$(_c3, \"ProjectLink\");\n$RefreshReg$(_c4, \"ProjectImage\");\n$RefreshReg$(_c5, \"Projects\");","map":{"version":3,"names":["React","useContext","styled","motion","Link","ProjectsContext","jsxDEV","_jsxDEV","ProjectGrid","div","_c","ProjectCard","_c2","ProjectLink","_c3","ProjectImage","img","_c4","Projects","_s","projects","getProjectPath","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","initial","opacity","animate","transition","duration","to","src","image","alt","title","description","_c5","$RefreshReg$"],"sources":["/Users/zachcohen/Desktop/web_design/PersonalPage/src/pages/Projects/Projects.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport styled from '@emotion/styled';\nimport { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport { ProjectsContext } from '../../context/ProjectsContext';\n\nconst ProjectGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 1.5rem;\n`;\n\nconst ProjectCard = styled(motion.div)`\n  background: white;\n  border-radius: 10px;\n  padding: 1rem;\n  box-shadow: 0 5px 15px rgba(0,0,0,0.1);\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nconst ProjectLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst ProjectImage = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 10px;\n  margin-bottom: 1rem;\n`;\n\nconst Projects = () => {\n  const { projects } = useContext(ProjectsContext);\n\n  const getProjectPath = (id) => {\n    switch(id) {\n      case 1:\n        return '/projects/seatbelt';\n      case 2:\n        return '/projects/ngo';\n      default:\n        return '#';\n    }\n  };\n\n  return (\n    <div>\n      <h1>My Projects</h1>\n      <ProjectGrid>\n        {projects.map(project => (\n          <ProjectCard\n            key={project.id}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.5 }}\n          >\n            <ProjectLink to={getProjectPath(project.id)}>\n              <ProjectImage src={`/images/${project.image}`} alt={project.title} />\n              <h2>{project.title}</h2>\n              <p>{project.description}</p>\n            </ProjectLink>\n          </ProjectCard>\n        ))}\n      </ProjectGrid>\n    </div>\n  );\n};\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}